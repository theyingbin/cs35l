I first need to generate 10,000,000 random double-precision floating point
numbers. I did this by using the following command:
     od -t f -N 80000000 < /dev/urandom > temp

Now that the random bytes are stored in our temp file, we need to remove the
addresses and replace the spaces with newlines. I did this by using the
following command:
     sed 's/^[^ ]*//' < temp | tr -s ' ' '\n' > floats

To time how long the sort command runs for various numbers of threads, I used
the command time -p sort -g --parallel=NUM floats > /dev/null where NUM is
the number of threads I want to run sort with. For this lab, we will see
the time is takes for sort to run when NUM is 1, 2, 4, and 8. My results are
shown below

time -p sort -g --parallel=1 floats > /dev/null
real 183.40
user 182.78
sys 0.61

time -p sort -g --parallel=2 floats > /dev/null
real 93.70
user 178.52
sys 0.32

time -p sort -g --parallel=4 floats > /dev/null
real 54.64
user 186.36
sys 0.47

time -p sort -g --parallel=8 floats > /dev/null
real 36.00
user 205.62
sys 0.60
