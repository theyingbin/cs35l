Exercise 1.1
1. -skip-
2. C-s UTF-8
3. M-b C-s Instructions
4. C-x [ C-s HTML M-b C-f
5. C-x [ C-s arrow M-b
6. C-e
7. C-a
8. C-x [
9. No
10. I can do so by using the ctrl commands
11. C-x C-c

Exercise 1.2
1. -skip-
2. M-g g 18 C-k
3. C-x [ C-s DELETEME C-a C-k
4. C-x [ C-s http://en.wikipedia.org C-s M-a M-k M-k
5. C-x [ C-s <! C-s C-b C-b M-z >

Exercise 1.3
1. -skip-
2. C-x [ M-% Assignment 1 (ENTER) Assignment 37 (ENTER) y y C-g
3. C-x [ M-% UTF-8 (ENTER) US-ASCII (ENTER) y C-g
4. C-x [ C-s <ol> C-e (ENTER)

Exercise 1.4
1. cat exer2.html exer2.diff > exer4.html
2. -skip-
3. C-x ] M-5 C-p C-f C-(SPACE) C-e M-w M-g g 338 C-y C-k
4. C-x ] M-17 C-p C-f C-(SPACE) C-e C-n C-n M-w M-g g 301 M-y C-a DEL C-p DEL
   C-x ] M-26 C-p C-f C-(SPACE) C-e M-w C-g g 94 C-y
   C-x ] M-37 C-p C-f C-(SPACE) C-e M-w M-g g 18 C-y
5. C-x [ M-g g 355 C-(SPACE) C-x ] C-w
6. C-_
7. M-g g 355 <!-- C-x ] -->
8. C-x [ M-x count-matches <ol>     NOTE: I got 7 matches
   M-% <ol> <OL> y y y y y y y
9. C-x C-s C-x C-c diff -u exer1.html exer4.html >exer4.diff

Exercise 1.5
1. M-x make-directory (ENTER) junk (ENTER)
2. C-x d junk (ENTER) C-x C-f hello.c (ENTER)
3. M-x compile (ENTER) gcc hello.c
4. M-! ./a.out C-x o C-x C-s hello-out
5. M-! ./a.out C-x o C-(SPACE) C-x ] M-w C-x o C-y
#include <stdio.h>
int
main (void)
{
  char n = '\n';
  char b = '\\';
  char q = '"';
  char const *p = "#include <stdio.h>%cint%cmain (void)%c{%c  char n = '%cn';%c  char b = '%c%c';%c  char q = '%c';%c  char const *p = %c%s%c;%c  printf (p, n, n, n, n, b, n, b, b, n, q, n, q, p, q, n, n, n, n);%c  return 0;%c}%c";
  printf (p, n, n, n, n, b, n, b, b, n, q, n, q, p, q, n, n, n, n);
  return 0;
}

Exercise 1.6
1. C-x b *scratch*
2. (random) C-j
3. (setq x(random)) C-j
   (setq y(random)) C-j
   (setq z(random)) C-j
4. (* x y z) C-j
   The result had a magitude lower than that of any of the operands
   Because of this, I believe that this is a result of overflow
5. M-: (* x y z)
   The output of this expression is the same as the one before
6. The numbers are only pseudo-random. When the machine needs to choose a
   random number, it runs an algorithm generate this number. This algorithm is
   based upon the seeding number. 
