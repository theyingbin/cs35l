To start off this lab, I wrote a C program that prints the cosine of 0.5 and compiled it using gcc

I then ran the ldd command to see which libraries it is linked to
     ldd hello

My output of this command is as follows:
        linux-vdso.so.1 =>  (0x00007ffc9fd89000)
	libc.so.6 => /lib64/libc.so.6 (0x00007f0b4a670000)
	/lib64/ld-linux-x86-64.so.2 (0x00007f0b4aa58000)

To see which system calls my program makes, I used the strace command
     strace ./hello

The calls that are related to dynamic linking are as follows:
     access("/etc/ld.so.preload", R_OK)      = -1 ENOENT (No such file or directory)
     open("/etc/ld.so.cache", O_RDONLY|O_CLOEXEC) = 3
     open("/lib64/libc.so.6", O_RDONLY|O_CLOEXEC) = 3

     The first command gives access to the shared library
     The second and third command open the shared library so we can process it
     Although mmap doesn't directly do anything with the shared libraries, it moves the libraries from virtual memory to RAM

Next I ran the command “ls /usr/bin | awk 'NR%101==104485521%101'” and got a list of 29 commands to investigate. Shown below is a list of commands I had to investigate:

     abrt-action-analyze-vmcore
     aulast
     cd-paranoia
     createdb
     dbus-send
     emacs
     fusermount-glusterfs
     gnatls
     gtbl
     hugeedit
     iso-info
     kfmclient
     ld.bfd
     lstopo-no-graphics
     mountpoint
     ntdbbackup
     pamfixtrunc
     pbmtocis
     pgmtopbm
     pnmfile
     ppm3d
     pstopnm
     revpath
     scorep-info
     solid-action-desktop-gen
     tac
     txt2po
     wmf2x
     xset

Since I didn't want to run ldd on all 29 commands by hand, I wrote a shell script to do this for me.
I noticed that the only error message I got was "not a dynamic executable".
This error occured with the following files:
     /usr/bin/abrt-action-analyze-vmcore
     /usr/bin/pgmtopbm
     /usr/bin/txt2po

This occurs because the files does not use any shared libraries. The first is a python file, not an executable so it doesn't need to resolve any addresses.
The second and 3rd files are shell scripts so just like the python file, it doesn't need to resolve any addresses at runtime.

I used the sed command to get rid of the addresses of the shared libraries since they are all repeated and the sort -u command to sort the remaining entries without any duplicates
My results are shown below:
	/lib64/ld-linux-x86-64.so.2 
	libacl.so.1 
	libasound.so.2 
	libatk-1.0.so.0 
	libatk-bridge-2.0.so.0 
	libatspi.so.0 
	libattica.so.0.4 
	libattr.so.1 
	libaudit.so.1 
	libauparse.so.0 
	libbfd-2.23.52.0.1-55.el7.so 
	libblkid.so.1 
	libbz2.so.1 
	libcairo-gobject.so.2 
	libcairo.so.2 
	libcap.so.2 
	libccan-samba4.so 
	libcdio_cdda.so.1 
	libcdio_paranoia.so.1 
	libcdio.so.15 
	libcom_err.so.2 
	libcroco-0.6.so.3 
	libcrypto.so.10 
	libcrypt.so.1 
	libc.so.6 
	libdbus-1.so.3 
	libdbusmenu-qt.so.2 
	libdl.so.2 
	libdrm.so.2 
	libdw.so.1 
	libEGL.so.1 
	libelf.so.1 
	libexpat.so.1 
	libfam.so.0 
	libffi.so.6 
	libfontconfig.so.1 
	libfreebl3.so 
	libfreetype.so.6 
	libgbm.so.1 
	libgcc_s.so.1 
	libgdk-3.so.0 
	libgdk_pixbuf-2.0.so.0 
	libgio-2.0.so.0 
	libglapi.so.0 
	libglib-2.0.so.0 
	libGL.so.1 
	libgmodule-2.0.so.0 
	libgmp.so.10 
	libgnutls.so.28 
	libgobject-2.0.so.0 
	libgraphite2.so.3 
	libgssapi_krb5.so.2 
	libgthread-2.0.so.0 
	libgtk-3.so.0 
	libharfbuzz.so.0 
	libhogweed.so.2 
	libhwloc.so.5 
	libICE.so.6 
	libiso9660.so.9 
	libjbig.so.2.0 
	libjpeg.so.62 
	libk5crypto.so.3 
	libkdecore.so.5 
	libkdeinit4_kfmclient.so 
	libkdeui.so.5 
	libkeyutils.so.1 
	libkio.so.5 
	libkrb5.so.3 
	libkrb5support.so.0 
	liblber-2.4.so.2 
	libldap_r-2.4.so.2 
	liblzma.so.5 
	libmount.so.1 
	libm.so.6 
	libnepomukquery.so.4 
	libnepomuk.so.4 
	libnepomukutils.so.4 
	libnetpbm.so.11 
	libnettle.so.4 
	libnspr4.so 
	libnss3.so 
	libnssutil3.so 
	libntdb.so.1 
	libnuma.so.1 
	libp11-kit.so.0 
	libpango-1.0.so.0 
	libpangocairo-1.0.so.0 
	libpangoft2-1.0.so.0 
	libpciaccess.so.0 
	libpcre.so.1 
	libpixman-1.so.0 
	libplc4.so 
	libplds4.so 
	libpng15.so.15 
	libpq.so.5 
	libpthread.so.0 
	libqca.so.2 
	libQtCore.so.4 
	libQtDBus.so.4 
	libQtGui.so.4 
	libQtNetwork.so.4 
	libQtSvg.so.4 
	libQtXml.so.4 
	libresolv.so.2 
	librsvg-2.so.2 
	librt.so.1 
	libsasl2.so.3 
	libselinux.so.1 
	libsmime3.so 
	libSM.so.6 
	libsolid.so.4 
	libsopranoclient.so.1 
	libsoprano.so.4 
	libssl3.so 
	libssl.so.10 
	libstdc++.so.6 
	libstreamanalyzer.so.0 
	libstreams.so.0 
	libtasn1.so.6 
	libtiff.so.5 
	libtinfo.so.5 
	libtspi.so.1 
	libudev.so.1 
	libudf.so.0 
	libuuid.so.1 
	libwmf-0.2.so.7 
	libwmflite-0.2.so.7 
	libX11.so.6 
	libX11-xcb.so.1 
	libXau.so.6 
	libxcb-dri2.so.0 
	libxcb-dri3.so.0 
	libxcb-glx.so.0 
	libxcb-present.so.0 
	libxcb-randr.so.0 
	libxcb-render.so.0 
	libxcb-shape.so.0 
	libxcb-shm.so.0 
	libxcb.so.1 
	libxcb-sync.so.1 
	libxcb-xfixes.so.0 
	libXcomposite.so.1 
	libXcursor.so.1 
	libXdamage.so.1 
	libXext.so.6 
	libXfixes.so.3 
	libXft.so.2 
	libXinerama.so.1 
	libXi.so.6 
	libxml2.so.2 
	libXmuu.so.1 
	libXpm.so.4 
	libXrandr.so.2 
	libXrender.so.1 
	libxshmfence.so.1 
	libXtst.so.6 
	libXxf86misc.so.1 
	libXxf86vm.so.1 
	libz.so.1 
	linux-vdso.so.1 
	not a dynamic executable
